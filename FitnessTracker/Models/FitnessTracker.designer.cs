#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FitnessTracker.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FitnessTracker")]
	public partial class FitnessTrackerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFitnessUser(FitnessUser instance);
    partial void UpdateFitnessUser(FitnessUser instance);
    partial void DeleteFitnessUser(FitnessUser instance);
    partial void InsertDistanceUnit(DistanceUnit instance);
    partial void UpdateDistanceUnit(DistanceUnit instance);
    partial void DeleteDistanceUnit(DistanceUnit instance);
    partial void InsertExerciseType(ExerciseType instance);
    partial void UpdateExerciseType(ExerciseType instance);
    partial void DeleteExerciseType(ExerciseType instance);
    partial void InsertWorkoutRegimen(WorkoutRegimen instance);
    partial void UpdateWorkoutRegimen(WorkoutRegimen instance);
    partial void DeleteWorkoutRegimen(WorkoutRegimen instance);
    partial void InsertWorkout(Workout instance);
    partial void UpdateWorkout(Workout instance);
    partial void DeleteWorkout(Workout instance);
    #endregion
		
		public FitnessTrackerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FitnessTrackerConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessTrackerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessTrackerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessTrackerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessTrackerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FitnessUser> FitnessUsers
		{
			get
			{
				return this.GetTable<FitnessUser>();
			}
		}
		
		public System.Data.Linq.Table<DistanceUnit> DistanceUnits
		{
			get
			{
				return this.GetTable<DistanceUnit>();
			}
		}
		
		public System.Data.Linq.Table<ExerciseType> ExerciseTypes
		{
			get
			{
				return this.GetTable<ExerciseType>();
			}
		}
		
		public System.Data.Linq.Table<WorkoutRegimen> WorkoutRegimens
		{
			get
			{
				return this.GetTable<WorkoutRegimen>();
			}
		}
		
		public System.Data.Linq.Table<Workout> Workouts
		{
			get
			{
				return this.GetTable<Workout>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FitnessUsers")]
	public partial class FitnessUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FitnessUserId;
		
		private string _UserName;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateLastVisited;
		
		private EntitySet<WorkoutRegimen> _WorkoutRegimens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFitnessUserIdChanging(int value);
    partial void OnFitnessUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateLastVisitedChanging(System.DateTime value);
    partial void OnDateLastVisitedChanged();
    #endregion
		
		public FitnessUser()
		{
			this._WorkoutRegimens = new EntitySet<WorkoutRegimen>(new Action<WorkoutRegimen>(this.attach_WorkoutRegimens), new Action<WorkoutRegimen>(this.detach_WorkoutRegimens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FitnessUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FitnessUserId
		{
			get
			{
				return this._FitnessUserId;
			}
			set
			{
				if ((this._FitnessUserId != value))
				{
					this.OnFitnessUserIdChanging(value);
					this.SendPropertyChanging();
					this._FitnessUserId = value;
					this.SendPropertyChanged("FitnessUserId");
					this.OnFitnessUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastVisited", DbType="DateTime NOT NULL")]
		public System.DateTime DateLastVisited
		{
			get
			{
				return this._DateLastVisited;
			}
			set
			{
				if ((this._DateLastVisited != value))
				{
					this.OnDateLastVisitedChanging(value);
					this.SendPropertyChanging();
					this._DateLastVisited = value;
					this.SendPropertyChanged("DateLastVisited");
					this.OnDateLastVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FitnessUser_WorkoutRegimen", Storage="_WorkoutRegimens", ThisKey="FitnessUserId", OtherKey="FitnessUserId")]
		public EntitySet<WorkoutRegimen> WorkoutRegimens
		{
			get
			{
				return this._WorkoutRegimens;
			}
			set
			{
				this._WorkoutRegimens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.FitnessUser = this;
		}
		
		private void detach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.FitnessUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistanceUnits")]
	public partial class DistanceUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistanceUnitId;
		
		private string _Name;
		
		private double _UnitsPerMile;
		
		private EntitySet<ExerciseType> _ExerciseTypes;
		
		private EntitySet<WorkoutRegimen> _WorkoutRegimens;
		
		private EntitySet<WorkoutRegimen> _WorkoutRegimens1;
		
		private EntitySet<Workout> _Workouts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistanceUnitIdChanging(int value);
    partial void OnDistanceUnitIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitsPerMileChanging(double value);
    partial void OnUnitsPerMileChanged();
    #endregion
		
		public DistanceUnit()
		{
			this._ExerciseTypes = new EntitySet<ExerciseType>(new Action<ExerciseType>(this.attach_ExerciseTypes), new Action<ExerciseType>(this.detach_ExerciseTypes));
			this._WorkoutRegimens = new EntitySet<WorkoutRegimen>(new Action<WorkoutRegimen>(this.attach_WorkoutRegimens), new Action<WorkoutRegimen>(this.detach_WorkoutRegimens));
			this._WorkoutRegimens1 = new EntitySet<WorkoutRegimen>(new Action<WorkoutRegimen>(this.attach_WorkoutRegimens1), new Action<WorkoutRegimen>(this.detach_WorkoutRegimens1));
			this._Workouts = new EntitySet<Workout>(new Action<Workout>(this.attach_Workouts), new Action<Workout>(this.detach_Workouts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceUnitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistanceUnitId
		{
			get
			{
				return this._DistanceUnitId;
			}
			set
			{
				if ((this._DistanceUnitId != value))
				{
					this.OnDistanceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._DistanceUnitId = value;
					this.SendPropertyChanged("DistanceUnitId");
					this.OnDistanceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitsPerMile", DbType="Float NOT NULL")]
		public double UnitsPerMile
		{
			get
			{
				return this._UnitsPerMile;
			}
			set
			{
				if ((this._UnitsPerMile != value))
				{
					this.OnUnitsPerMileChanging(value);
					this.SendPropertyChanging();
					this._UnitsPerMile = value;
					this.SendPropertyChanged("UnitsPerMile");
					this.OnUnitsPerMileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_ExerciseType", Storage="_ExerciseTypes", ThisKey="DistanceUnitId", OtherKey="DefaultDistanceUnitId")]
		public EntitySet<ExerciseType> ExerciseTypes
		{
			get
			{
				return this._ExerciseTypes;
			}
			set
			{
				this._ExerciseTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_WorkoutRegimen", Storage="_WorkoutRegimens", ThisKey="DistanceUnitId", OtherKey="FinishingDistanceUnitId")]
		public EntitySet<WorkoutRegimen> WorkoutRegimens
		{
			get
			{
				return this._WorkoutRegimens;
			}
			set
			{
				this._WorkoutRegimens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_WorkoutRegimen1", Storage="_WorkoutRegimens1", ThisKey="DistanceUnitId", OtherKey="StartingDistanceUnitId")]
		public EntitySet<WorkoutRegimen> WorkoutRegimens1
		{
			get
			{
				return this._WorkoutRegimens1;
			}
			set
			{
				this._WorkoutRegimens1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_Workout", Storage="_Workouts", ThisKey="DistanceUnitId", OtherKey="DistanceUnitId")]
		public EntitySet<Workout> Workouts
		{
			get
			{
				return this._Workouts;
			}
			set
			{
				this._Workouts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExerciseTypes(ExerciseType entity)
		{
			this.SendPropertyChanging();
			entity.DistanceUnit = this;
		}
		
		private void detach_ExerciseTypes(ExerciseType entity)
		{
			this.SendPropertyChanging();
			entity.DistanceUnit = null;
		}
		
		private void attach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.FinishingDistanceUnit = this;
		}
		
		private void detach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.FinishingDistanceUnit = null;
		}
		
		private void attach_WorkoutRegimens1(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.StartingDistanceUnit = this;
		}
		
		private void detach_WorkoutRegimens1(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.StartingDistanceUnit = null;
		}
		
		private void attach_Workouts(Workout entity)
		{
			this.SendPropertyChanging();
			entity.DistanceUnit = this;
		}
		
		private void detach_Workouts(Workout entity)
		{
			this.SendPropertyChanging();
			entity.DistanceUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExerciseTypes")]
	public partial class ExerciseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExerciseTypeId;
		
		private System.Nullable<int> _DefaultDistanceUnitId;
		
		private string _Name;
		
		private char _HasDistanceData;
		
		private System.Nullable<int> _MinSecondsPerMile;
		
		private System.Nullable<int> _MaxSecondsPerMile;
		
		private EntitySet<WorkoutRegimen> _WorkoutRegimens;
		
		private EntityRef<DistanceUnit> _DistanceUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerciseTypeIdChanging(int value);
    partial void OnExerciseTypeIdChanged();
    partial void OnDefaultDistanceUnitIdChanging(System.Nullable<int> value);
    partial void OnDefaultDistanceUnitIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasDistanceDataChanging(char value);
    partial void OnHasDistanceDataChanged();
    partial void OnMinSecondsPerMileChanging(System.Nullable<int> value);
    partial void OnMinSecondsPerMileChanged();
    partial void OnMaxSecondsPerMileChanging(System.Nullable<int> value);
    partial void OnMaxSecondsPerMileChanged();
    #endregion
		
		public ExerciseType()
		{
			this._WorkoutRegimens = new EntitySet<WorkoutRegimen>(new Action<WorkoutRegimen>(this.attach_WorkoutRegimens), new Action<WorkoutRegimen>(this.detach_WorkoutRegimens));
			this._DistanceUnit = default(EntityRef<DistanceUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExerciseTypeId
		{
			get
			{
				return this._ExerciseTypeId;
			}
			set
			{
				if ((this._ExerciseTypeId != value))
				{
					this.OnExerciseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExerciseTypeId = value;
					this.SendPropertyChanged("ExerciseTypeId");
					this.OnExerciseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDistanceUnitId", DbType="Int")]
		public System.Nullable<int> DefaultDistanceUnitId
		{
			get
			{
				return this._DefaultDistanceUnitId;
			}
			set
			{
				if ((this._DefaultDistanceUnitId != value))
				{
					if (this._DistanceUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultDistanceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultDistanceUnitId = value;
					this.SendPropertyChanged("DefaultDistanceUnitId");
					this.OnDefaultDistanceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDistanceData", DbType="Char(1) NOT NULL")]
		public char HasDistanceData
		{
			get
			{
				return this._HasDistanceData;
			}
			set
			{
				if ((this._HasDistanceData != value))
				{
					this.OnHasDistanceDataChanging(value);
					this.SendPropertyChanging();
					this._HasDistanceData = value;
					this.SendPropertyChanged("HasDistanceData");
					this.OnHasDistanceDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinSecondsPerMile", DbType="Int")]
		public System.Nullable<int> MinSecondsPerMile
		{
			get
			{
				return this._MinSecondsPerMile;
			}
			set
			{
				if ((this._MinSecondsPerMile != value))
				{
					this.OnMinSecondsPerMileChanging(value);
					this.SendPropertyChanging();
					this._MinSecondsPerMile = value;
					this.SendPropertyChanged("MinSecondsPerMile");
					this.OnMinSecondsPerMileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSecondsPerMile", DbType="Int")]
		public System.Nullable<int> MaxSecondsPerMile
		{
			get
			{
				return this._MaxSecondsPerMile;
			}
			set
			{
				if ((this._MaxSecondsPerMile != value))
				{
					this.OnMaxSecondsPerMileChanging(value);
					this.SendPropertyChanging();
					this._MaxSecondsPerMile = value;
					this.SendPropertyChanged("MaxSecondsPerMile");
					this.OnMaxSecondsPerMileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExerciseType_WorkoutRegimen", Storage="_WorkoutRegimens", ThisKey="ExerciseTypeId", OtherKey="ExerciseTypeId")]
		public EntitySet<WorkoutRegimen> WorkoutRegimens
		{
			get
			{
				return this._WorkoutRegimens;
			}
			set
			{
				this._WorkoutRegimens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_ExerciseType", Storage="_DistanceUnit", ThisKey="DefaultDistanceUnitId", OtherKey="DistanceUnitId", IsForeignKey=true)]
		public DistanceUnit DistanceUnit
		{
			get
			{
				return this._DistanceUnit.Entity;
			}
			set
			{
				DistanceUnit previousValue = this._DistanceUnit.Entity;
				if (((previousValue != value) 
							|| (this._DistanceUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistanceUnit.Entity = null;
						previousValue.ExerciseTypes.Remove(this);
					}
					this._DistanceUnit.Entity = value;
					if ((value != null))
					{
						value.ExerciseTypes.Add(this);
						this._DefaultDistanceUnitId = value.DistanceUnitId;
					}
					else
					{
						this._DefaultDistanceUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DistanceUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.ExerciseType = this;
		}
		
		private void detach_WorkoutRegimens(WorkoutRegimen entity)
		{
			this.SendPropertyChanging();
			entity.ExerciseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkoutRegimens")]
	public partial class WorkoutRegimen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkoutRegimenId;
		
		private int _FitnessUserId;
		
		private int _ExerciseTypeId;
		
		private System.DateTime _StartDate;
		
		private int _NumWeeks;
		
		private int _DaysPerWeek;
		
		private System.Nullable<double> _StartingNumDistanceUnits;
		
		private System.Nullable<int> _StartingDistanceUnitId;
		
		private System.Nullable<double> _FinishingNumDistanceUnits;
		
		private System.Nullable<int> _FinishingDistanceUnitId;
		
		private System.Nullable<int> _StartingTotalSeconds;
		
		private System.Nullable<int> _FinishingTotalSeconds;
		
		private EntitySet<Workout> _Workouts;
		
		private EntityRef<ExerciseType> _ExerciseType;
		
		private EntityRef<DistanceUnit> _FinishingDistanceUnit;
		
		private EntityRef<FitnessUser> _FitnessUser;
		
		private EntityRef<DistanceUnit> _StartingDistanceUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkoutRegimenIdChanging(int value);
    partial void OnWorkoutRegimenIdChanged();
    partial void OnFitnessUserIdChanging(int value);
    partial void OnFitnessUserIdChanged();
    partial void OnExerciseTypeIdChanging(int value);
    partial void OnExerciseTypeIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnNumWeeksChanging(int value);
    partial void OnNumWeeksChanged();
    partial void OnDaysPerWeekChanging(int value);
    partial void OnDaysPerWeekChanged();
    partial void OnStartingNumDistanceUnitsChanging(System.Nullable<double> value);
    partial void OnStartingNumDistanceUnitsChanged();
    partial void OnStartingDistanceUnitIdChanging(System.Nullable<int> value);
    partial void OnStartingDistanceUnitIdChanged();
    partial void OnFinishingNumDistanceUnitsChanging(System.Nullable<double> value);
    partial void OnFinishingNumDistanceUnitsChanged();
    partial void OnFinishingDistanceUnitIdChanging(System.Nullable<int> value);
    partial void OnFinishingDistanceUnitIdChanged();
    partial void OnStartingTotalSecondsChanging(System.Nullable<int> value);
    partial void OnStartingTotalSecondsChanged();
    partial void OnFinishingTotalSecondsChanging(System.Nullable<int> value);
    partial void OnFinishingTotalSecondsChanged();
    #endregion
		
		public WorkoutRegimen()
		{
			this._Workouts = new EntitySet<Workout>(new Action<Workout>(this.attach_Workouts), new Action<Workout>(this.detach_Workouts));
			this._ExerciseType = default(EntityRef<ExerciseType>);
			this._FinishingDistanceUnit = default(EntityRef<DistanceUnit>);
			this._FitnessUser = default(EntityRef<FitnessUser>);
			this._StartingDistanceUnit = default(EntityRef<DistanceUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkoutRegimenId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkoutRegimenId
		{
			get
			{
				return this._WorkoutRegimenId;
			}
			set
			{
				if ((this._WorkoutRegimenId != value))
				{
					this.OnWorkoutRegimenIdChanging(value);
					this.SendPropertyChanging();
					this._WorkoutRegimenId = value;
					this.SendPropertyChanged("WorkoutRegimenId");
					this.OnWorkoutRegimenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FitnessUserId", DbType="Int NOT NULL")]
		public int FitnessUserId
		{
			get
			{
				return this._FitnessUserId;
			}
			set
			{
				if ((this._FitnessUserId != value))
				{
					if (this._FitnessUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFitnessUserIdChanging(value);
					this.SendPropertyChanging();
					this._FitnessUserId = value;
					this.SendPropertyChanged("FitnessUserId");
					this.OnFitnessUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseTypeId", DbType="Int NOT NULL")]
		public int ExerciseTypeId
		{
			get
			{
				return this._ExerciseTypeId;
			}
			set
			{
				if ((this._ExerciseTypeId != value))
				{
					if (this._ExerciseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExerciseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExerciseTypeId = value;
					this.SendPropertyChanged("ExerciseTypeId");
					this.OnExerciseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumWeeks", DbType="Int NOT NULL")]
		public int NumWeeks
		{
			get
			{
				return this._NumWeeks;
			}
			set
			{
				if ((this._NumWeeks != value))
				{
					this.OnNumWeeksChanging(value);
					this.SendPropertyChanging();
					this._NumWeeks = value;
					this.SendPropertyChanged("NumWeeks");
					this.OnNumWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysPerWeek", DbType="Int NOT NULL")]
		public int DaysPerWeek
		{
			get
			{
				return this._DaysPerWeek;
			}
			set
			{
				if ((this._DaysPerWeek != value))
				{
					this.OnDaysPerWeekChanging(value);
					this.SendPropertyChanging();
					this._DaysPerWeek = value;
					this.SendPropertyChanged("DaysPerWeek");
					this.OnDaysPerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingNumDistanceUnits", DbType="Float")]
		public System.Nullable<double> StartingNumDistanceUnits
		{
			get
			{
				return this._StartingNumDistanceUnits;
			}
			set
			{
				if ((this._StartingNumDistanceUnits != value))
				{
					this.OnStartingNumDistanceUnitsChanging(value);
					this.SendPropertyChanging();
					this._StartingNumDistanceUnits = value;
					this.SendPropertyChanged("StartingNumDistanceUnits");
					this.OnStartingNumDistanceUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingDistanceUnitId", DbType="Int")]
		public System.Nullable<int> StartingDistanceUnitId
		{
			get
			{
				return this._StartingDistanceUnitId;
			}
			set
			{
				if ((this._StartingDistanceUnitId != value))
				{
					if (this._StartingDistanceUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStartingDistanceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._StartingDistanceUnitId = value;
					this.SendPropertyChanged("StartingDistanceUnitId");
					this.OnStartingDistanceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishingNumDistanceUnits", DbType="Float")]
		public System.Nullable<double> FinishingNumDistanceUnits
		{
			get
			{
				return this._FinishingNumDistanceUnits;
			}
			set
			{
				if ((this._FinishingNumDistanceUnits != value))
				{
					this.OnFinishingNumDistanceUnitsChanging(value);
					this.SendPropertyChanging();
					this._FinishingNumDistanceUnits = value;
					this.SendPropertyChanged("FinishingNumDistanceUnits");
					this.OnFinishingNumDistanceUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishingDistanceUnitId", DbType="Int")]
		public System.Nullable<int> FinishingDistanceUnitId
		{
			get
			{
				return this._FinishingDistanceUnitId;
			}
			set
			{
				if ((this._FinishingDistanceUnitId != value))
				{
					if (this._FinishingDistanceUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinishingDistanceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._FinishingDistanceUnitId = value;
					this.SendPropertyChanged("FinishingDistanceUnitId");
					this.OnFinishingDistanceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingTotalSeconds", DbType="Int")]
		public System.Nullable<int> StartingTotalSeconds
		{
			get
			{
				return this._StartingTotalSeconds;
			}
			set
			{
				if ((this._StartingTotalSeconds != value))
				{
					this.OnStartingTotalSecondsChanging(value);
					this.SendPropertyChanging();
					this._StartingTotalSeconds = value;
					this.SendPropertyChanged("StartingTotalSeconds");
					this.OnStartingTotalSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishingTotalSeconds", DbType="Int")]
		public System.Nullable<int> FinishingTotalSeconds
		{
			get
			{
				return this._FinishingTotalSeconds;
			}
			set
			{
				if ((this._FinishingTotalSeconds != value))
				{
					this.OnFinishingTotalSecondsChanging(value);
					this.SendPropertyChanging();
					this._FinishingTotalSeconds = value;
					this.SendPropertyChanged("FinishingTotalSeconds");
					this.OnFinishingTotalSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkoutRegimen_Workout", Storage="_Workouts", ThisKey="WorkoutRegimenId", OtherKey="WorkoutRegimenId")]
		public EntitySet<Workout> Workouts
		{
			get
			{
				return this._Workouts;
			}
			set
			{
				this._Workouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExerciseType_WorkoutRegimen", Storage="_ExerciseType", ThisKey="ExerciseTypeId", OtherKey="ExerciseTypeId", IsForeignKey=true)]
		public ExerciseType ExerciseType
		{
			get
			{
				return this._ExerciseType.Entity;
			}
			set
			{
				ExerciseType previousValue = this._ExerciseType.Entity;
				if (((previousValue != value) 
							|| (this._ExerciseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExerciseType.Entity = null;
						previousValue.WorkoutRegimens.Remove(this);
					}
					this._ExerciseType.Entity = value;
					if ((value != null))
					{
						value.WorkoutRegimens.Add(this);
						this._ExerciseTypeId = value.ExerciseTypeId;
					}
					else
					{
						this._ExerciseTypeId = default(int);
					}
					this.SendPropertyChanged("ExerciseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_WorkoutRegimen", Storage="_FinishingDistanceUnit", ThisKey="FinishingDistanceUnitId", OtherKey="DistanceUnitId", IsForeignKey=true)]
		public DistanceUnit FinishingDistanceUnit
		{
			get
			{
				return this._FinishingDistanceUnit.Entity;
			}
			set
			{
				DistanceUnit previousValue = this._FinishingDistanceUnit.Entity;
				if (((previousValue != value) 
							|| (this._FinishingDistanceUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinishingDistanceUnit.Entity = null;
						previousValue.WorkoutRegimens.Remove(this);
					}
					this._FinishingDistanceUnit.Entity = value;
					if ((value != null))
					{
						value.WorkoutRegimens.Add(this);
						this._FinishingDistanceUnitId = value.DistanceUnitId;
					}
					else
					{
						this._FinishingDistanceUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FinishingDistanceUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FitnessUser_WorkoutRegimen", Storage="_FitnessUser", ThisKey="FitnessUserId", OtherKey="FitnessUserId", IsForeignKey=true)]
		public FitnessUser FitnessUser
		{
			get
			{
				return this._FitnessUser.Entity;
			}
			set
			{
				FitnessUser previousValue = this._FitnessUser.Entity;
				if (((previousValue != value) 
							|| (this._FitnessUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FitnessUser.Entity = null;
						previousValue.WorkoutRegimens.Remove(this);
					}
					this._FitnessUser.Entity = value;
					if ((value != null))
					{
						value.WorkoutRegimens.Add(this);
						this._FitnessUserId = value.FitnessUserId;
					}
					else
					{
						this._FitnessUserId = default(int);
					}
					this.SendPropertyChanged("FitnessUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_WorkoutRegimen1", Storage="_StartingDistanceUnit", ThisKey="StartingDistanceUnitId", OtherKey="DistanceUnitId", IsForeignKey=true)]
		public DistanceUnit StartingDistanceUnit
		{
			get
			{
				return this._StartingDistanceUnit.Entity;
			}
			set
			{
				DistanceUnit previousValue = this._StartingDistanceUnit.Entity;
				if (((previousValue != value) 
							|| (this._StartingDistanceUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StartingDistanceUnit.Entity = null;
						previousValue.WorkoutRegimens1.Remove(this);
					}
					this._StartingDistanceUnit.Entity = value;
					if ((value != null))
					{
						value.WorkoutRegimens1.Add(this);
						this._StartingDistanceUnitId = value.DistanceUnitId;
					}
					else
					{
						this._StartingDistanceUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StartingDistanceUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workouts(Workout entity)
		{
			this.SendPropertyChanging();
			entity.WorkoutRegimen = this;
		}
		
		private void detach_Workouts(Workout entity)
		{
			this.SendPropertyChanging();
			entity.WorkoutRegimen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workouts")]
	public partial class Workout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkoutId;
		
		private int _WorkoutRegimenId;
		
		private System.DateTime _StartingTime;
		
		private System.Nullable<double> _NumDistanceUnits;
		
		private System.Nullable<int> _DistanceUnitId;
		
		private int _TotalSeconds;
		
		private EntityRef<DistanceUnit> _DistanceUnit;
		
		private EntityRef<WorkoutRegimen> _WorkoutRegimen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkoutIdChanging(int value);
    partial void OnWorkoutIdChanged();
    partial void OnWorkoutRegimenIdChanging(int value);
    partial void OnWorkoutRegimenIdChanged();
    partial void OnStartingTimeChanging(System.DateTime value);
    partial void OnStartingTimeChanged();
    partial void OnNumDistanceUnitsChanging(System.Nullable<double> value);
    partial void OnNumDistanceUnitsChanged();
    partial void OnDistanceUnitIdChanging(System.Nullable<int> value);
    partial void OnDistanceUnitIdChanged();
    partial void OnTotalSecondsChanging(int value);
    partial void OnTotalSecondsChanged();
    #endregion
		
		public Workout()
		{
			this._DistanceUnit = default(EntityRef<DistanceUnit>);
			this._WorkoutRegimen = default(EntityRef<WorkoutRegimen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkoutId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkoutId
		{
			get
			{
				return this._WorkoutId;
			}
			set
			{
				if ((this._WorkoutId != value))
				{
					this.OnWorkoutIdChanging(value);
					this.SendPropertyChanging();
					this._WorkoutId = value;
					this.SendPropertyChanged("WorkoutId");
					this.OnWorkoutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkoutRegimenId", DbType="Int NOT NULL")]
		public int WorkoutRegimenId
		{
			get
			{
				return this._WorkoutRegimenId;
			}
			set
			{
				if ((this._WorkoutRegimenId != value))
				{
					if (this._WorkoutRegimen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkoutRegimenIdChanging(value);
					this.SendPropertyChanging();
					this._WorkoutRegimenId = value;
					this.SendPropertyChanged("WorkoutRegimenId");
					this.OnWorkoutRegimenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartingTime
		{
			get
			{
				return this._StartingTime;
			}
			set
			{
				if ((this._StartingTime != value))
				{
					this.OnStartingTimeChanging(value);
					this.SendPropertyChanging();
					this._StartingTime = value;
					this.SendPropertyChanged("StartingTime");
					this.OnStartingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDistanceUnits", DbType="Float")]
		public System.Nullable<double> NumDistanceUnits
		{
			get
			{
				return this._NumDistanceUnits;
			}
			set
			{
				if ((this._NumDistanceUnits != value))
				{
					this.OnNumDistanceUnitsChanging(value);
					this.SendPropertyChanging();
					this._NumDistanceUnits = value;
					this.SendPropertyChanged("NumDistanceUnits");
					this.OnNumDistanceUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceUnitId", DbType="Int")]
		public System.Nullable<int> DistanceUnitId
		{
			get
			{
				return this._DistanceUnitId;
			}
			set
			{
				if ((this._DistanceUnitId != value))
				{
					if (this._DistanceUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistanceUnitIdChanging(value);
					this.SendPropertyChanging();
					this._DistanceUnitId = value;
					this.SendPropertyChanged("DistanceUnitId");
					this.OnDistanceUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSeconds", DbType="Int NOT NULL")]
		public int TotalSeconds
		{
			get
			{
				return this._TotalSeconds;
			}
			set
			{
				if ((this._TotalSeconds != value))
				{
					this.OnTotalSecondsChanging(value);
					this.SendPropertyChanging();
					this._TotalSeconds = value;
					this.SendPropertyChanged("TotalSeconds");
					this.OnTotalSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistanceUnit_Workout", Storage="_DistanceUnit", ThisKey="DistanceUnitId", OtherKey="DistanceUnitId", IsForeignKey=true)]
		public DistanceUnit DistanceUnit
		{
			get
			{
				return this._DistanceUnit.Entity;
			}
			set
			{
				DistanceUnit previousValue = this._DistanceUnit.Entity;
				if (((previousValue != value) 
							|| (this._DistanceUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistanceUnit.Entity = null;
						previousValue.Workouts.Remove(this);
					}
					this._DistanceUnit.Entity = value;
					if ((value != null))
					{
						value.Workouts.Add(this);
						this._DistanceUnitId = value.DistanceUnitId;
					}
					else
					{
						this._DistanceUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DistanceUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkoutRegimen_Workout", Storage="_WorkoutRegimen", ThisKey="WorkoutRegimenId", OtherKey="WorkoutRegimenId", IsForeignKey=true)]
		public WorkoutRegimen WorkoutRegimen
		{
			get
			{
				return this._WorkoutRegimen.Entity;
			}
			set
			{
				WorkoutRegimen previousValue = this._WorkoutRegimen.Entity;
				if (((previousValue != value) 
							|| (this._WorkoutRegimen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkoutRegimen.Entity = null;
						previousValue.Workouts.Remove(this);
					}
					this._WorkoutRegimen.Entity = value;
					if ((value != null))
					{
						value.Workouts.Add(this);
						this._WorkoutRegimenId = value.WorkoutRegimenId;
					}
					else
					{
						this._WorkoutRegimenId = default(int);
					}
					this.SendPropertyChanged("WorkoutRegimen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
